
# create VM Nics
# Lacks ability for adding Nics to backend pool of LB
# https://github.com/ansible/ansible/issues/37734
#- name: Azure | Manage VM Nics
#  azure_rm_networkinterface:
  #  name: "{{ item.name }}"
  #  resource_group: "{{ rg }}"
  #  virtual_network_name: "{{ vnet_name }}"
  #  subnet_name: "{{ item.subnet }}"
  #  security_group_name: "{{ }}"
  #  public_ip: false

- block:
  - name: Azure | Manage Master Nics (ansible managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-master-{{ item }}VMNic \
    --vnet-name {{ vnet_name }}
    --subnet master_subnet
    --network-security-group master-nsg \
    --lb-name ocpMasterLB \
    --lb-address-pools masterAPIBackend \
    --internal-dns-name ocp-master-{{ item }} \
    --public-ip-address '' "
    loop: "{{ master_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false

  - name: Azure | Manage Infra Nics (Ansible Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-infra-{{ item }}VMNic \
    --vnet-name {{ vnet_name }} \
    --subnet infra_subnet \
    --network-security-group infra-node-nsg \
    --lb-name ocpRouterLB \
    --lb-address-pools RouterBackend \
    --internal-dns-name ocp-infra-{{ item }} \
    --public-ip-address '' "
    loop: "{{ infra_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false

  - name: Azure | Manage Node  Nics (Ansible Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-app-{{ item }}VMNic \
    --vnet-name {{ vnet_name }} \
    --subnet app_subnet \
    --network-security-group node-nsg \
    --internal-dns-name ocp-app-{{ item }} \
    --public-ip-address '' "
    loop: "{{ app_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false

  - name: Azure | Manage CNS Nics (Ansible Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-cns-{{ item }}VMNic \
    --vnet-name {{ vnet_name }} \
    --subnet cns_subnet \
    --network-security-group cns-nsg \
    --internal-dns-name ocp-cns-{{ item }} \
    --public-ip-address '' "
    loop: "{{ cns_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - deploy_cns | default(true) | bool
      - not deploy_cns_on_infra | default(false) | bool

  - name: Azure | Manage public Bastion Nic (Ansible Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name bastion-VMNic \
    --vnet-name {{ vnet_name }}
    --subnet master_subnet
    --network-security-group bastion-nsg \
    --public-ip-address bastionExternalIP "
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - bastion_private_ip is not defined

  # The "--public-ip-address" parameter can be removed if the host on
  # which the deploy.yml playbook runs can connect to the private
  # bastion IP address.
  - name: Azure | Manage public/private Bastion Nic (Ansible Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name bastion-VMNic \
    --vnet-name {{ vnet_name }}
    --subnet master_subnet
    --network-security-group bastion-nsg \
    --public-ip-address bastionExternalIP \
    --private-ip-address {{ bastion_private_ip }} "
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - bastion_private_ip is defined



  when: not vnet_customer_managed | default(false) | bool


- block:



  - name: Azure | Manage Master Nics (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-master-{{ item }}VMNic \
    --subnet {{ vnet_customer_managed_master_subnet_id }} \
    --network-security-group master-nsg \
    --lb-name ocpMasterLB \
    --lb-address-pools masterAPIBackend \
    --internal-dns-name ocp-master-{{ item }} \
    --public-ip-address '' \
    {% if master_nodes_custom_props is defined and master_nodes_custom_props[item] is defined and master_nodes_custom_props[item].static_ip is defined %} \
      --private-ip-address {{ master_nodes_custom_props[item].static_ip }} \
    {% endif %}
    "
    loop: "{{ master_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false

  - name: Azure | Manage Infra Nics (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-infra-{{ item }}VMNic \
    --subnet {{ vnet_customer_managed_infra_subnet_id }} \
    --network-security-group infra-node-nsg \
    --lb-name ocpRouterLB \
    --lb-address-pools RouterBackend \
    --internal-dns-name ocp-infra-{{ item }} \
    --public-ip-address '' \
    {% if infra_nodes_custom_props is defined and infra_nodes_custom_props[item] is defined and infra_nodes_custom_props[item].static_ip is defined %} \
      --private-ip-address {{ infra_nodes_custom_props[item].static_ip }} \
    {% endif %}
    "
    loop: "{{ infra_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false


#    {% if app_nodes_custom_props is defined and app_nodes_custom_props[item] is defined and app_nodes_custom_props[item].nonpci is defined  and app_nodes_custom_props[item].nonpci %} \
 #      --subnet {{ vnet_customer_managed_app_nonpci_subnet_id }} \
#    {% else %} \
      #--subnet {{ vnet_customer_managed_app_subnet_id }} \
#    {% endif %}

  - name: Azure | Manage Node  Nics (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-app-{{ item }}VMNic \
    {% if app_nodes_custom_props is defined and app_nodes_custom_props[item] is defined and app_nodes_custom_props[item].nonpci is defined  and app_nodes_custom_props[item].nonpci %} \
      --subnet {{ vnet_customer_managed_app_nonpci_subnet_id }} \
    {% else %} \
      --subnet {{ vnet_customer_managed_app_subnet_id }} \
    {% endif %}
    --network-security-group node-nsg \
    --internal-dns-name ocp-app-{{ item }} \
    --public-ip-address '' \
    {% if app_nodes_custom_props is defined and app_nodes_custom_props[item] is defined and app_nodes_custom_props[item].static_ip is defined %} \
      --private-ip-address {{ app_nodes_custom_props[item].static_ip }} \
    {% endif %}
    "
  #  "
    loop: "{{ app_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false

  - name: Azure | Manage CNS Nics (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name ocp-cns-{{ item }}VMNic \
    --subnet {{ vnet_customer_managed_cns_subnet_id }} \
    --network-security-group cns-nsg \
    --internal-dns-name ocp-cns-{{ item }} \
    --public-ip-address '' \
    --private-ip-address {{ cns_nodes_custom_props[item -1].static_ip }}"
    loop: "{{ cns_nodes }}"
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - deploy_cns | default(true) | bool
      - not  deploy_cns_on_infra | default(false) | bool
      - cns_nodes_custom_props | length == cns_nodes | length

  - name: Azure | Manage public Bastion Nic (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name bastion-VMNic \
    --subnet {{ vnet_customer_managed_master_subnet_id if vnet_customer_managed | default(false) | bool else 'master_subnet' }}
    --network-security-group bastion-nsg \
    --public-ip-address bastionExternalIP "
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - bastion_private_ip is not defined

  - name: Azure | Manage public/private Bastion Nic (Customer Managed)
    shell: " az network nic create  --resource-group {{ rg }} \
    --name bastion-VMNic \
    --subnet {{ vnet_customer_managed_master_subnet_id if vnet_customer_managed | default(false) | bool else 'master_subnet' }}
    --network-security-group bastion-nsg \
    --public-ip-address bastionExternalIP \
    --private-ip-address {{ bastion_private_ip }} "
    register: nic
    failed_when:
      - "'InternalDnsName' not in nic.stderr"
      - "nic.rc != 0"
    changed_when: false
    when:
      - bastion_private_ip is defined


  when: vnet_customer_managed | default(false) | bool
